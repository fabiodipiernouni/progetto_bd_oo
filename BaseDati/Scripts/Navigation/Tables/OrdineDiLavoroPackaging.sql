/*
    Nome: OrdineDiLavoroPackaging
    Descrizione: rappresenta un ordine di lavoro di tipo 'Packaging', la cardinalità è in funzione del peso dei prodotti a magazzino.
 */

create table OrdineDiLavoroPackaging (
    Id integer generated by default on null as identity not null,
    DataCreazione date default sysdate not null,
    DataInizioPianificazione date, -- se valorizzato indica che l'ordine di lavoro è stato pianificato, sarà quindi possibile prendere l'ordine in carico dal gruppo corriere solo a a partire da questa data
    DataInizioLavorazione date, -- se valorizzata DataInizioPiannificazione deve essere maggiore o uguale ad essa
    DataFineLavorazione date, -- aggiornato dall'operatore corriere quando ha finito di lavorare l'ordine di lavoro
    IdGruppoCorriere integer, -- il gruppo corriere che prende in carico l'ordine di lavoro
    IdOperatoreCorriere integer, -- l'operatore corriere che prende in carico l'ordine di lavoro
    IdFiliale integer not null, -- filiale dove viene gestito l'ordine, i gruppi corrieri sono quelli che fanno riferimento a questa filiale
    IdMagazzino integer not null, -- magazzino in cui prelevare il materiale da imballare e dove depositare il materiale imballato
    IdSpedizione integer not null, -- spedizione di riferimento
    IdIndirizzoSpedizione integer not null, -- indirizzo di spedizione del cliente
    Stato varchar2(50) generated always as (case
        when IdGruppoCorriere is null then 'DaAssegnare'
        when IdGruppoCorriere is not null and DataInizioLavorazione is null then 'Assegnato'
        when IdGruppoCorriere is not null and DataInizioLavorazione is not null and DataFineLavorazione is null then 'InLavorazione'
        when IdGruppoCorriere is not null and DataInizioLavorazione is not null and DataFineLavorazione is not null then 'Lavorato'
    end) virtual not null, -- IdVincolo: DE.02; la scelta di rendere virtuale lo stato è dovuta al fatto che non c'è necessità di indicizzare lo stato, inoltre si vuole evitare l'uso di trigger che potrebbero rallentare il sistema
    noteAggiuntiveCliente varchar2(512 byte),
    noteAggiuntiveOperatore varchar2(512 byte),
    constraint PkOrdineDiLavoroPackaging primary key (Id),
    constraint FkOrdineDiLavoroPackagingGruppoCorriere foreign key (IdGruppoCorriere) references GruppoCorriere (Id),
    constraint FkOrdineDiLavoroPackagingIdOperatoreCorriere foreign key (IdOperatoreCorriere) references Utente (Id),
    -- Le date di lavorazione possono essere non valorizzate o valorizzata solo DataInizioLavorazione o DataInizioLavorazione e DataFineLavorazione. DataInizioLavorazione, se valorizzata, deve essere sempre maggiore o uguale alla DataCreazione. Se DataFineLavorazione è valorizzato deve essere valorizzato anche DataInizioLavorazione e DataFineLavorazione deve essere maggiore o uguale a DataInizioLavorazione
    constraint CkOrdineDiLavoroPackagingDataInizioPianificazione check (DataInizioPianificazione is null or DataInizioPianificazione >= DataCreazione), --IdVincolo: VI.23
    constraint CkOrdineDiLavoroPackagingDataInizioLavorazione check (DataInizioLavorazione is null or DataInizioLavorazione >= nvl(DataInizioPianificazione, DataCreazione)), --IdVincolo: VI.24
    constraint CkOrdineDiLavoroPackagingDateLavorazione check (DataFineLavorazione is null or (DataInizioLavorazione is not null AND DataFineLavorazione >= DataInizioLavorazione)), --IdVincolo: VI.25
    constraint FkOrdineDiLavoroPackagingIdFiliale foreign key (IdFiliale) references Filiale (Id),
    constraint FkOrdineDiLavoroPackagingIdMagazzino foreign key (IdMagazzino) references Magazzino (Id),
    constraint FkOrdineDiLavoroPackagingIdSpedizione foreign key (IdSpedizione) references Spedizione (Id),
    -- se IdGruppoCorriere è valorizzato allora anche IdUtenteOperatore deve essere valorizzato
    constraint CkOrdineDiLavoroPackagingGruppoCorriere check ((IdGruppoCorriere is null and IdOperatoreCorriere is null) or (IdGruppoCorriere is not null and IdOperatoreCorriere is not null)) --IdVincolo: VI.26
);