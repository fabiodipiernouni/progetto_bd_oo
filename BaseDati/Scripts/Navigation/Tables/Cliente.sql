/*
    Nome: Cliente
    Descrizione: contiene i dati del cliente che effettua l'ordine
 */
create table Cliente
(
    Id integer generated by default on null as identity not null,
    Nome VARCHAR2(64 byte) not null, -- se valorizzato RagioneSociale rappresenta il nome del referente
    Cognome VARCHAR2(64 byte) not null, -- se valorizzato RagioneSociale rappresenta il cognome del referente
    RagioneSociale VARCHAR2(64 byte),
    Email VARCHAR2(64 byte) not null unique,
    CodiceFiscale VARCHAR2(16 byte), -- ammette null ma i valori sono unique
    PartitaIVA VARCHAR2(16 byte), -- ammette null ma i valori sono unique
    constraint PKCliente primary key (Id),
    --uno tra CodiceFiscale e partitaIVA deve essere valorizzato
    constraint CkClienteCForPIVA check ((CodiceFiscale is not null and PartitaIVA is null) or (CodiceFiscale is null and PartitaIVA is not null)),--IdVincolo: VI.11
    constraint UqClienteCodiceFiscale unique (CodiceFiscale),
    constraint UqClientePartitaIVA unique (PartitaIVA),
    -- se Ã¨ valorizzata RagioneSociale allora deve esserlo anche PartitaIVA
    constraint CkClienteRagioneSociale check (RagioneSociale is null and PartitaIVA is null or RagioneSociale is not null and PartitaIVA is not null) --IdVincolo: VI.12
);