-- convezione nomi constraint: <Ck|Uk|Fk|Pk|WeakRel(fk con on delete cascade)><NomeTabella><Vincolo|NomeColonna>
-- convezione nomi: non si usano underscore e i nomi sono in camelcase

create table Org (
    Id integer generated by default on null as identity not null, --pk
    Paese varchar2(255 char) not null,
    RagioneSociale varchar2(255 char) not null,
    PartitaIVA varchar2(255 char), -- se valorizzata deve essere di 11 cifre
    SedeLegaleIndirizzo integer not null,
    constraint PkOrg primary key (id),
    constraint CkOrgPartitaIVA check (PartitaIVA is null or (length(PartitaIVA) = 11)),
    constraint FkOrgSedeLegaleIndirizzo foreign key (SedeLegaleIndirizzo) references Indirizzo (Id)
);

create table Filiale (
    Id integer generated by default on null as identity not null, --pk
    Nome varchar2(50) not null,
    IdOrg integer not null,
    Localita integer not null,
    constraint PkFiliale primary key (id),
    constraint UqFilialeNomeOrg unique (Nome, IdOrg),
    constraint WeakRelOrg foreign key (IdOrg) references Org (Id) on delete cascade,
    constraint FkLocalita foreign key (Localita) references Indirizzo (Id)
);

alter table Utente add constraint FkUtenteFiliale foreign key (IdFilialeOperatore) references Filiale (Id);

create table Magazzino (
    Id integer generated by default on null as identity not null, --pk
    Nome varchar2(255 char) not null,
    IdIndirizzo integer not null,
    IdFiliale integer not null,
    constraint PkMagazzino primary key (id),
    constraint UqMagazzinoNomeFiliale unique (Nome, IdFiliale),
    constraint FkMagazzinoIndirizzo foreign key (IdIndirizzo) references Indirizzo (id),
    constraint FkMagazzinoFiliale foreign key (IdFiliale) references Filiale (id)
);

create table CatalogoProdotti (
    Id integer generated by default on null as identity not null, --pk
    CodiceEAN varchar2(13 char) not null, --codice univoco, deve essere sempre lungo 13 caratteri
    Nome varchar2(255 char) not null,
    Descrizione varchar2(255 char) not null,
    URLPhoto varchar2(255 char) not null,
    Tipo varchar2(20 byte) not null, --enum Abbigliamento, Alimentari, Elettronica, Casa, Sport, Giardino, Altro
    Prezzo double precision not null,
    Peso number not null,
    Larghezza number,
    Altezza number,
    Profondita number,
    Pericolosita varchar2(20 byte) not null, --enum Nessuna, Infiammabile, Esplosivo, Tossico, Chimico, Corrosivo, Infettante, Radioattivo
    constraint PkCatalogoProdotti primary key (id),
    constraint UqCatalogoProdottiCodiceEAN unique (CodiceEAN),
    constraint CkCatalogoProdottiCodiceEAN check (length(CodiceEAN) = 13),
    constraint CkCatalogoProdottiPericolosita check (Pericolosita in ('Nessuna', 'Infiammabile', 'Esplosivo', 'Tossico', 'Chimico', 'Corrosivo', 'Infettante', 'Radioattivo')),
    constraint CkCatalogoProdottiTipo check( Tipo in ('Abbigliamento', 'Alimentari', 'Elettrodomestici', 'Elettronica', 'Casa', 'Sport', 'Giardino', 'Altro') )
);

create table MerceStoccata (
    Id integer generated by default on null as identity not null, --pk
    IdProdotto integer not null,
    QuantitaReale integer not null, -- deve essere sempre maggiore di zero
    QuantitaPrenotata integer default 0 not null, -- deve essere sempre maggiore o uguale a zero
    QuantitaDisponibile integer generated always as (QuantitaReale - QuantitaPrenotata) virtual not null,
    IdMagazzino integer not null,
    SettoreMagazzino char(1),
    constraint PkMerceStoccata primary key (Id),
    constraint FkMerceStoccataIdProdotto foreign key (IdProdotto) references CatalogoProdotti (id),
    constraint FkMerceStoccataIdMagazzino foreign key (IdMagazzino) references Magazzino (id),
    constraint UqMerceStoccataIdProdottoIdMagazzino unique (IdProdotto, IdMagazzino),
    constraint CkMerceStoccataQuantitaReale check (QuantitaReale > 0),
    constraint CkMerceStoccataQuantitaPrenotata check (QuantitaPrenotata >= 0)
);

create table GruppoCorriere (
    Id integer not null, --pk
    Nome varchar2(255 char) not null,
    CodiceCorriere varchar2(255 char) not null, --unique
    NumeroDipendenti integer not null, --deve essere sempre maggiore di zero
    IdFiliale integer not null,
    constraint PkGruppoCorriere primary key (Id),
    constraint UqGruppoCorriereCodiceCorriere unique (CodiceCorriere),
    constraint FkGruppoCorriereIdFiliale foreign key (IdFiliale) references filiale (id),
    constraint CkGruppoCorriereNumeroDipendenti check (NumeroDipendenti > 0)
);

alter table Utente add constraint FkUtenteGruppoCorriere foreign key (IdGruppoCorriere) references GruppoCorriere (Id);

create table MezzoDiTrasporto (
    Id integer generated by default on null as identity not null, --pk
    Targa varchar2(255 char) not null, -- unique
    TipoMezzo varchar2(255 char) not null, --enum Camion, Furgone, Auto
    IdGruppoCorriere integer not null,
    PesoTrasportabile decimal not null, -- deve essere sempre maggiore di zero
    constraint PkMezzoDiTrasporto primary key (id),
        constraint UqMezzoDiTrasportoTarga unique (Targa),
    constraint CkMezzoDiTrasportoTipoMezzo check( TipoMezzo in ('Camion', 'Furgone', 'Auto')),
    constraint CkMezzoDiTrasportoPesoTrasportabile check (PesoTrasportabile > 0),
    constraint WeakRelGruppoCorriere foreign key (IdGruppoCorriere) references GruppoCorriere (Id) on delete cascade
);

create table ImpegnoMezzo
(
    Id         integer generated by default on null as identity not null, --pk
    IdMezzo    integer not null,
    DataInizio date    not null,
    DataFine   date, -- se non valorizzata si intende fino a data indefinita
    constraint PkImpegnoMezzo primary key (Id),
    constraint FkImpegnoMezzoIdMezzo foreign key (IdMezzo) references MezzoDiTrasporto (Id),
    --dataFine se valorizzato deve essere maggiore di datainizio
    constraint CkImpegnoMezzoDataFine check ( DataFine is null or (DataInizio <= DataFine) )
);
